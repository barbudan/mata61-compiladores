nada P ( letra P [ ] , letra P ) { int P ; int P [ P [ P ( ) * P ( ) ] % P ( ) + P ( ) / P * P / P ( ) - P ( ) / P ( ) * P ( P ( ) ) + ( ( - P ) ) ] ; letra P ; int P [ ( P * ( P ( ) ) ) ] ; P [ P * P * - ( P ) ] = P % P ; uai ( - P > P ( ) ou ( nao P != P ( ) ) ) { escreve ( P * P ( ) ) ; } vaza ; P ( ( P ( ) ) ) ; P ( ) ; } letra P ( letra P [ ] , letra P [ ] , real P , real P [ ] , int P , real P [ ] , int P ) { letra P [ P ( P ( P ) , - ( P ) , P ( ) ) ] ; int P = - P - - P ( ) * - P + P [ ( P ) ] ; P ( P ( ) % P [ P ( ) ] , P , P / P ( ) % P , P ( ) + P ( ) , P ) ; vaza ; } nada P ( real P [ ] , letra P ) { int P = P ( ) / - P ( ) - - P ( ) % ( P ( ) ) / P ( ) / P ( ) - P ( ) / P ( ) / P / P ( ) + ( P ) % P [ P ] ; letra P [ - P ( ) ] ; letra P ; P ( ) ; P ( - P * P / P ( ) , P ( ) - P ( ) ) ; se ( ( P ( ) != P ( ) ) ) { P ( ) ; vaza ; } senao { } escreve ( P ( ) / P ) ; } int mainha ( ) { letra P ; real P = ( - P % P / P ( ) ) ; P ( P / P + ( P ( ) ) ) ; escreve ( P ( ) / P ( ) / P / P ) ; }
