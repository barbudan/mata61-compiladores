nada J ( letra J [ ] , real J [ ] ) { int J = J [ - ( J ( ) / J ) ] / J ( - J ) ; int J = ( J ( ) + J - J ( ) - ( J ) / ( J ) ) - ( J ) ; escreve ( J ( ) % J ( ( J ( ) ) ) ) ; uai ( - ( J ) + J >= J % J - J ( ) * J ( ) ) { } } letra J ( int J [ ] , letra J [ ] ) { real J ; real J ; letra J [ J - J ( ) * - J ( ) % J ( ) * J ( ) / J ( ) - J ( ) / J ( ) - J ( ) % J ( ) + J ] ; letra J [ ( J ( ) ) / J ( ) / J ( ) % J ( ) + J + J ( ) ] ; real J [ ( J ( ) ) / J ( ) * J ] ; uai ( - ( J ) / J * J / J ( ) + J == J ( ) - ( J + J ) ou ( J ( ) ) != J ( J ) ) { tome - J ; } escreve ( J ( ) / J + - J + J / J ( ) + - J ( ) + ( J ( ) / J ) ) ; } real J ( int J , letra J , int J , int J , real J [ ] ) { letra J ; real J [ J % J % J - J ( ) / ( - J ( ) ) * - J ( ) / J ( ) - J ( ) % J * J + J - J ( ) ] ; le ( J ) ; vaza ; } nada J ( int J , real J [ ] , real J [ ] , real J [ ] , real J ) { real J = - J / - J ( ) / - J / ( J ( ) - J ) * - J ( ) % J ( ) - J ( ) ; real J = J [ J ( ) + J ( ) ] ; escreve ( - J ( ) ) ; J [ J + J ] = J / J ( ) % J ( ) + J ( ) ; vaza ; } letra J ( int J [ ] , real J ) { real J [ - J ] ; real J = J * J - J ( ) ; int J ; J = J ( ) ; J ( ) ; } int mainha ( ) { int J [ - J ( ) ] ; letra J [ J ( ) * J ] ; int J ; se ( J >= J ( ) ) { } le ( J ) ; }
